/*!
 * Planning
 * Version: 1.0 25/01/23
 *          1.2 27/09/23 recurence pour l'utilisation sur mobil
 *          1.3 09/10/23 cacher l'option 'jamais' du formulaire de recurrence
 *                       correction bug répétition des selecteurs 'enseignant' et 'lacalisation'
 *
 * Copyright (c) 2019 - 2023 ALL RIGHTS RESERVED
 * auteur Mickael FEUVRIER
 * 
 */
$(()=>{$("<div />").attr("id","context-menu").appendTo("#planning"),$("<div />").attr("id","drawer").appendTo("#planning"),$("<div />").attr("id","toolbar").appendTo("#drawer"),$("<div />").attr("id","scheduler").appendTo("#drawer"),$("<div />").attr("id","loadpanel").appendTo("#planning");class modifStore{constructor(type,val){this.type=type,this.value=val}}class queryFM{constructor(script,param){this.script=script,this.param=param}}let appointmentDownloaded=[],popupOption=null,toastOption=null,isDrag=!0,isAdd=!0;const W_HEIGHT=$(window).height(),RRule=rrule.RRule,LOCATION=[{id:"1",text:"Extérieur",color:"#F5DF7D",onItemClick:changeLocation},{id:"2",text:"Diapason",color:"#C3FAAA",onItemClick:changeLocation},{id:"3",text:"Bureau",color:"#BB9AFE",onItemClick:changeLocation},{id:"4",text:"Domicile",color:"#FFA069",onItemClick:changeLocation}],CONTEXT_MENU_ITEMS=[{text:"Nouveau",onItemClick:createAppointment,disabled:!1},{text:"Grouper par équipe",beginGroup:!0,onItemClick:groupCell},{text:"Aller à aujourd'hui",onItemClick:showCurrentDate}],appointmentContextMenuItems=[{text:"Ouvrir",onItemClick:showAppointment},{text:"Supprimer",onItemClick:deleteAppointment},{text:"Dupliquer",onItemClick:duplicateAppointment},{text:"Lieux",items:LOCATION}];getDataAppointmentFM(new Date),queryToFM(new queryFM("getDataParam","")),queryToFM(new queryFM("getDataAbsence","")),queryToFM(new queryFM("getDataTeacher","")),queryToFM(new queryFM("getDataJourChome",""));const APPOINTMENT_STORE=new DevExpress.data.ArrayStore({data:[],key:"id",onInserted:e=>{let val;appointementChangeFM(new modifStore("insert",e))},onUpdated:(key,e)=>{let val;appointementChangeFM(new modifStore("update",e))},onRemoved:key=>{let val;appointementChangeFM(new modifStore("remove",key))}}),APPOINTMENT_SOURCE=new DevExpress.data.DataSource({store:APPOINTMENT_STORE,paginate:!1,reshapeOnPush:!0}),ABSENCE_STORE=new DevExpress.data.ArrayStore({data:[],key:"id",onInserted:value=>{SQL_InsertFM("Absence",value)},onUpdated:(key,value)=>{delete value.id,SQL_UpdateFM("Absence",key,value)},onRemoved:key=>{SQL_removeFM("Absence",key)}}),CHOME_STORE=new DevExpress.data.ArrayStore({data:[],key:"id",onInserted:value=>{SQL_InsertFM("Chome",value)},onUpdated:(key,value)=>{delete value.id,SQL_UpdateFM("Chome",key,value)},onRemoved:key=>{SQL_removeFM("Chome",key)}}),TEACHER_STORE=new DevExpress.data.ArrayStore({data:[],key:"id",onInserted:value=>{SQL_InsertFM("Teacher",value)},onUpdated:(key,value)=>{SQL_UpdateFM("Teacher",key,value)},onRemoved:key=>{SQL_removeFM("Teacher",key)}}),PARAM_STORE=new DevExpress.data.ArrayStore({data:[],key:"id",onUpdated:(key,value)=>{SQL_UpdateFM("Parametre",key,value)}});DevExpress.localization.locale(navigator.language),DevExpress.localization.formatMessage;const SCHEDULER_TOOLBAR=$("#toolbar").dxToolbar({elementAttr:{class:"toolbar_header"},items:[{widget:"dxButton",location:"before",options:{icon:"menu",onClick:()=>{DRAWER.toggle();let val=!0===DRAWER.option("opened")?1:0;PARAM_STORE.update(PARAM_STORE._array[0].id,{drawer:val})},elementAttr:{class:"buttonPanel"}}}]}).dxToolbar("instance"),DRAWER=$("#drawer").dxDrawer({opened:!1,height:W_HEIGHT,elementAttr:{class:"drawer-planning"},width:"100%",closeOnOutsideClick:!1,openedStateMode:"shrink",template:()=>{let panelAccordionContent=$("<div />").addClass("panel-content-accordion"),accordion=$("<div />").width(250).addClass("panel-accordion");return accordion=accordion.append(panelAccordionContent),accordion},onOptionChanged:()=>{let buttonPanel=$(".buttonPanel");buttonPanel.hasClass("panelOpened")?buttonPanel.removeClass("panelOpened"):buttonPanel.addClass("panelOpened")}}).dxDrawer("instance"),LOADPANEL=$("#loadpanel").dxLoadPanel({shadingColor:"rgba(0,0,0,0.4)",position:{of:"#drawer"},height:"100vh",width:"100vw",visible:!1,showIndicator:!0,showPane:!0,shading:!0,hideOnOutsideClick:!1}).dxLoadPanel("instance");LOADPANEL.show();const SCHEDULER=$("#scheduler").dxScheduler({height:"100vh",useDropDownViewSwitcher:!0,dataSource:APPOINTMENT_SOURCE,adaptivityEnabled:!1,showAllDayPanel:!1,showCurrentTimeIndicator:!1,firstDayOfWeek:1,currentView:"semaine",crossScrollingEnabled:!1,groupByDate:!0,startDayHour:8,endDayHour:18.5,groups:"teacherID",allowDragging:isDrag,editing:{allowDragging:isDrag,allowAdding:!0},views:[{type:"workWeek",name:"semaine"}],recurrenceEditMode:"dialog",resources:[{key:"teacherID",fieldExpr:"teacherID",allowMultiple:!1,dataSource:getDataTeacher([],new Date),label:"Enseignant"},{key:"id",fieldExpr:"locationID",label:"Lieux",dataSource:LOCATION}],appointmentDragging:{group:"dragging",onRemove:e=>{e.component.deleteAppointment(e.itemData)},onAdd:e=>{e.component.addAppointment(e.itemData),e.itemElement.remove()},onDragMove:()=>{let hoverCell=$(".dx-scheduler-date-table-droppable-cell");isDrag=!hoverCell.hasClass("dx-template-chome")},onDragEnd:e=>{e.cancel=!1===isDrag}},onAppointmentRendered:()=>{widthAppointment()},onAppointmentUpdated:e=>{e.component.repaint(),e.component.on([{repaint:afterRepaint()}])},timeCellTemplate:(data,i,element)=>{element.text(data.text).css({color:"#2394ce",height:cellHeight()})},appointmentTemplate:(e,i)=>{let startHour=new Date(e.appointmentData.startDate).toLocaleTimeString(),endHour=new Date(e.appointmentData.endDate).toLocaleTimeString(),location,desc,statut,color,reload;if(void 0!==e.appointmentData.locationID&&(location=e.appointmentData.locationID),desc=""!==e.appointmentData.description&&void 0!==e.appointmentData.description?`<div class="app-template-description">${e.appointmentData.description}</div>`:"",location&&"teacherID"==SCHEDULER.option("groups")){let locationFind=LOCATION.find(e=>e.id===location);statut=locationFind.text,color=locationFind.color}else if(location||"teacherID"!=SCHEDULER.option("groups")){let teacherFind=TEACHER_STORE._array.find(f=>f.id===e.appointmentData.teacherID);statut=teacherFind.text,color=teacherFind.color}else color="#b9b9bd";e.appointmentData.recurrenceRule&&(reload="dx-icon-ja-reload");let appTemplateWrapper=$("<div />").addClass("app-template-wrapper"),appTemplateContent=`<div id="app-template-content${i}" class="app-template-content" style="background-color:${color}"><div class="app-template-titre ${reload}">${e.appointmentData.text}</div><div class="app-template-hour">${startHour.slice(0,-3)} - ${endHour.slice(0,-3)}</div><div class="app-template-statut">${statut}</div>${desc}</div>`;return appTemplateWrapper.html(appTemplateContent),appTemplateWrapper.children().dxScrollView({useNative:!1}).dxScrollView("instance"),appTemplateWrapper},dataCellTemplate:(cellData,index,container)=>{container.css("height",cellHeight());let cellTime=cellData.startDate.getTime();PARAM_STORE.load().done(data=>{for(let[i,value]of data.entries()){const hours=`${cellData.startDate.getHours()}:${cellData.startDate.getMinutes()}:00`;hours>=`${value.pause.from}:00`&&hours<`${value.pause.to}:00`&&container.addClass("dx-template-Pose")}}),cellData.groups.teacherID&&ABSENCE_STORE.load().done(data=>{for(let[i,value]of data.entries()){let abscenceStart=new Date(data[i].startDate),abscenceEnd=new Date(data[i].endDate),teacher=data[i].teacherID;abscenceStart.getTime()<=cellTime&&abscenceEnd.getTime()>=cellTime&&cellData.groups.teacherID==teacher&&container.addClass("dx-template-chome")}}),CHOME_STORE.load().done(data=>{for(let[i,value]of data.entries()){let startDate=new Date(data[i].startDate),endDate=new Date(data[i].endDate);startDate.getTime()<=cellTime&&endDate.getTime()>=cellTime&&container.addClass("dx-template-chome")}})},appointmentTooltipTemplate:(e,i,elem)=>{let startHour=new Date(e.appointmentData.startDate).toLocaleTimeString(),endHour=new Date(e.appointmentData.endDate).toLocaleTimeString(),location,desc;location=void 0===e.appointmentData.locationID?"":e.appointmentData.locationID;let locationFind=LOCATION.find(e=>e.id===location),teacherFind=TEACHER_STORE._array.find(f=>f.id===e.appointmentData.teacherID);desc=""!==e.appointmentData.description&&void 0!==e.appointmentData.description?`<div class="tooltip-description tooltip">${e.appointmentData.description}</div>`:"";let buttonTrash=$("<div />").dxButton({icon:"trash",elementAttr:{class:"tooltip-trash-button"},type:"normal",onClick:f=>{SCHEDULER.hideAppointmentTooltip(),deleteAppointment(e),f.event.stopPropagation()}}),tooltipTemplateWrapper=$("<div />").addClass("tooltip-template-wrapper"),tooltipTemplateContent=`<div><div class="dx-tooltip-appointment-item"><div class="tooltip-marker-wrapper">\n<div class="dx-tooltip-appointment-item-marker-body" style="background: ${teacherFind.color}"></div></div><div class="tooltip-subject-wrapper"><div class="tooltip-text">${e.appointmentData.text}</div><div class="tooltip-hour">${startHour.slice(0,-3)} - ${endHour.slice(0,-3)}</div><div class="tooltip-statut">${locationFind.text}</div></div><div class="tooltip-trash"></div>\n</div>${desc}</div>`,trashWrapper;return tooltipTemplateWrapper.html(tooltipTemplateContent),tooltipTemplateWrapper.find(".tooltip-trash").append(buttonTrash),tooltipTemplateWrapper},onAppointmentFormOpening:e=>{let appStartDate=new Date(e.appointmentData.startDate).getTime(),appEndDate=new Date(e.appointmentData.endDate).getTime(),cellTeacher=e.appointmentData.teacherID;CHOME_STORE.load().done(data=>{for(let[i,value]of data.entries()){let startDate=new Date(data[i].startDate),endDate=new Date(data[i].endDate);startDate.getTime()<=appStartDate&&endDate.getTime()>=appEndDate&&(e.cancel=!0,createToast(ALERT_APPOINTMENT_DISABLE))}}),ABSENCE_STORE.load().done(data=>{for(let[i,value]of data.entries()){let abscenceStart=new Date(data[i].startDate),abscenceEnd=new Date(data[i].endDate),monitor=data[i].teacherID;abscenceStart.getTime()<=appStartDate&&abscenceEnd.getTime()>=appEndDate&&cellTeacher==monitor&&(e.cancel=!0,createToast(ALERT_APPOINTMENT_DISABLE))}}),e.form.itemOption("mainGroup.allDay","visible",!1),e.form.itemOption("mainGroup.teacherID","visible",!1),e.form.itemOption("mainGroup.locationID","visible",!1);let isSubscribed=!1,repeatSwitch;if(e.form.getEditor("repeat").option("value")&&setTimeout(()=>{setEditors(e)}),!isSubscribed){isSubscribed=!0;let editorOptions=e.form.itemOption("mainGroup.repeat").editorOptions,defaultHandler=editorOptions.onValueChanged;editorOptions.onValueChanged=function(ee){defaultHandler(ee),ee.value&&setTimeout(()=>{setEditors(e)})},e.form.itemOption("mainGroup.repeat","editorOptions",editorOptions)}let items=e.form.option("items");e.form.itemOption("mainGroup.teacherAndLocation")||(items[0].items.push({itemType:"group",name:"teacherAndLocation",colCount:2,colSpan:2,items:[{name:"teacher",dataField:"teacherID",label:{text:"Enseignant",visible:!0},editorType:"dxSelectBox",editorOptions:{width:"100%",dataSource:TEACHER_STORE,displayExpr:"text",valueExpr:"id"}},{name:"lieux",dataField:"locationID",label:{text:"Lieux",visible:!0},editorType:"dxSelectBox",editorOptions:{width:"100%",dataSource:LOCATION,displayExpr:"text",valueExpr:"id"}}]}),e.form.option("items",items))},onOptionChanged:e=>{if("currentDate"===e.name){let currentDate=SCHEDULER.option("currentDate");LOADPANEL.option("visible",!0),SCHEDULER.option("resources[0].dataSource",getDataTeacher(PARAM_STORE._array[0].teacher,currentDate)),$(".itemSem").css("display","none"),$(`.sem-${getWeekNumber(currentDate)}`).css("display","block"),$("#button-sem .dx-button-text").text(getWeekNumber(currentDate)),SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])}if("groupByDate"===e.name){let currentDate=SCHEDULER.option("currentDate");$("#button-sem .dx-button-text").text(getWeekNumber(currentDate))}},onAppointmentContextMenu:e=>{updateContextMenu(!1,appointmentContextMenuItems,getAppointmentMenuTemplate,onItemClick(e),e)},onCellContextMenu:e=>{$(e.cellElement[0]).hasClass("dx-template-chome")?(CONTEXT_MENU_ITEMS[0].disabled=!0,updateContextMenu(!1,CONTEXT_MENU_ITEMS,getCellMenuTemplate,onItemClick(e),e)):(CONTEXT_MENU_ITEMS[0].disabled=!1,updateContextMenu(!1,CONTEXT_MENU_ITEMS,getCellMenuTemplate,onItemClick(e),e))}}).dxScheduler("instance"),CONTEXT_MENU=$("#context-menu").dxContextMenu({width:200,dataSource:[],disabled:!0,onHiding:()=>{CONTEXT_MENU.resetOption("dataSource"),appointmentContextMenuItems.splice(4,1)}}).dxContextMenu("instance"),POPUP_WEEK={width:310,height:365,title:"Semaine",dragEnabled:!1,closeOnOutsideClick:!0,showCloseButton:!0,wrapperAttr:{class:"sem-popup"},shading:!0,shadingColor:"#00000050",container:".dx-viewport",contentTemplate:elem=>{const WRAPPER_WEEK_POPUP=$("<div />").addClass("wrapper-popup-week"),WRAPPER_YEAR_SELECTER=$("<div/>").appendTo(WRAPPER_WEEK_POPUP).addClass("year-select"),YEAR_SELECTER=$("<div />").dxTextBox({name:"select-Year",value:new Date(getDate()).getFullYear(),width:200,buttons:[{location:"after",name:"prev",options:{icon:"chevronright",onClick:()=>{let yearSelecter=YEAR_SELECTER.dxTextBox("instance");yearSelecter.option("value",yearSelecter.option("value")+1)}}},{location:"before",name:"next",options:{icon:"chevronleft",onClick:()=>{let yearSelecter=YEAR_SELECTER.dxTextBox("instance");yearSelecter.option("value",yearSelecter.option("value")-1)}}}]});YEAR_SELECTER.appendTo(WRAPPER_YEAR_SELECTER);const WRAPPER_TABLE_NUM_WEEK=$("<div />").addClass("wrapper-sem").appendTo(WRAPPER_WEEK_POPUP);for(let i=1;i<=53;i++){const BUTTON_NUM_WEEK=$("<div />").addClass(`num-sem num-sem${i}`).dxButton({stylingMode:"outlined",elementAttr:{sem:i},text:i,type:"normal",width:32,height:32,onClick:e=>{let elem=YEAR_SELECTER.dxTextBox("instance");goWeek(parseInt(e.element[0].attributes.sem.value),elem.option("value")),popupOption.hide()}});WRAPPER_TABLE_NUM_WEEK.append(BUTTON_NUM_WEEK)}return WRAPPER_WEEK_POPUP},position:{my:"right top",at:"left top",of:".sem",offset:"0 10"}},POPUP_SALARIE_ABSENCE_OPTION={width:610,height:435,title:"Absence des enseignants",dragEnabled:!1,closeOnOutsideClick:!0,showCloseButton:!0,shading:!0,shadingColor:"#00000050",container:".dx-viewport",wrapperAttr:{class:"grid-salAbsence-popup"},position:{my:"center",at:"center",of:"window"},contentTemplate:()=>{const WRAPPER_SALARIE_ABSENCE=$("<div />").addClass("wrapper-grid-salAbs-popup"),GRID_SALARIE_ABSENCE=WRAPPER_SALARIE_ABSENCE.dxDataGrid({elementAttr:{id:"grid-salarie-absence"},dataSource:ABSENCE_STORE,scrolling:{mode:"infinite"},height:"350px",showColumnLines:!0,showBorders:!0,headerFilter:{visible:!1},columns:[{dataField:"teacherID",width:150,caption:"Nom",setCellValue:(rowData,value)=>{rowData.teacherID=value},lookup:{dataSource:TEACHER_STORE,valueExpr:"id",displayExpr:"text"}},{dataField:"startDate",dataType:"datetime",caption:"Date de début",width:170,sortOrder:"desc"},{dataField:"endDate",dataType:"datetime",caption:"Date de fin",width:170}],editing:{mode:"form",allowUpdating:!0,allowDeleting:!0,allowAdding:!0},onRowUpdated:()=>{SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])},onRowInserted:()=>{SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])},onRowRemoved:()=>{SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])}}).dxDataGrid("instance");return WRAPPER_SALARIE_ABSENCE},toolbarItems:[{visible:!1}]},POPUP_SHOW_TEACHERS_OPTION={width:570,height:500,title:"Voir les enseignants",dragEnabled:!1,closeOnOutsideClick:!0,showCloseButton:!0,wrapperAttr:{class:"grid-salAbsence-popup"},shading:!0,shadingColor:"#00000050",container:".dx-viewport",position:{my:"center",at:"center",of:"window"},contentTemplate:()=>{const WRAPPER_SHOW_TEACHERS=$("<div />").addClass("wrapper-grid-showEquip-popup");return WRAPPER_SHOW_TEACHERS.dxDataGrid({dataSource:TEACHER_STORE,height:"400px",showColumnLines:!0,showBorders:!0,headerFilter:{visible:!1},editing:{mode:"form",allowUpdating:!0,allowDeleting:!0,allowAdding:!0},onRowUpdated:()=>{createOptionTeacher(),SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])},onRowInserted:()=>{createOptionTeacher(),SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])},onRowRemoved:e=>{createOptionTeacher(),SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}]);let array=PARAM_STORE._array[0].teachers;array=array.filter(e=>e!==e.key),PARAM_STORE.update(PARAM_STORE._array[0].id,{teacher:array})},columns:[{dataField:"text",width:110,caption:"Nom"},{dataField:"startDate",dataType:"datetime",caption:"Date de début",width:110,sortOrder:"desc"},{dataField:"endDate",dataType:"datetime",caption:"Date de fin",width:110},{dataField:"color",width:100,caption:"Couleur",cellTemplate:(container,options)=>{const COLOR=$("<div />").css("backgroundColor",options.value).addClass("color-teacher");container.append(COLOR)},editCellTemplate:colorPickerTeacher}]}).dxDataGrid("instance"),WRAPPER_SHOW_TEACHERS},toolbarItems:[{visible:!1}]},POPUP_GRID_UNWORKINGDAY_OPTION={width:470,height:480,title:"Jours chomés",dragEnabled:!1,closeOnOutsideClick:!0,showCloseButton:!0,wrapperAttr:{class:"grid-unworkedDay-popup"},shading:!0,shadingColor:"#00000050",container:".dx-viewport",position:{my:"center",at:"center",of:"window"},contentTemplate:()=>{const WRAPPER_GRID_UNWORKINGDAY=$("<div />").addClass("wrapper-grid-salAbs-popup"),GRID_UNWORKINGDAY=WRAPPER_GRID_UNWORKINGDAY.dxDataGrid({dataSource:CHOME_STORE,scrolling:{mode:"infinite"},height:"400px",showColumnLines:!0,showBorders:!0,headerFilter:{visible:!0},columns:[{dataField:"startDate",dataType:"date",caption:"Date de début",width:170,sortOrder:"desc"},{dataField:"endDate",dataType:"date",caption:"Date de fin",width:170}],editing:{mode:"form",allowUpdating:!0,allowDeleting:!0,allowAdding:!0},onRowUpdated:()=>{SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])},onRowInserted:()=>{SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])},onRowRemoved:()=>{SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])}});return WRAPPER_GRID_UNWORKINGDAY},toolbarItems:[{visible:!1}]},ACCORDION=$(".panel-content-accordion").dxAccordion({dataSource:[{title:"Options",id:3}],animationDuration:300,collapsible:!0,multiple:!1,width:250,height:"auto",deferRendering:!1,itemTitleTemplate:(itemData,itemIndex,itemElement)=>{const TITLE=$("<span />").text(itemData.title);TITLE.appendTo(itemElement)},itemTemplate:(itemData,itemIndex,itemElement)=>{const WRAPPER_LISTE=$("<div />").addClass("listContent").height(W_HEIGHT),WRAPPER_DRAGGABLE_ITEMS=$("<div />").addClass("list scroll").attr("id","list3");WRAPPER_LISTE.append(WRAPPER_DRAGGABLE_ITEMS),itemElement.append(WRAPPER_LISTE),$("#list3").append($("<div />").addClass("option option-regroupement")),$(".option-regroupement").append($("<span />").text("Options de regroupement").addClass("option-label")),createOptionGroupByDate(),createOptionGroupByTeacherOrLocation();const TEACHERS_SWITCH=$("<div />").addClass("option equipChanged");"teacherID"===SCHEDULER.option("groups")?TEACHERS_SWITCH.show():TEACHERS_SWITCH.hide(),$("#list3").append(TEACHERS_SWITCH),TEACHERS_SWITCH.append($("<span />").addClass("option-label").text("Afficher les enseignants")),TEACHERS_SWITCH.append($("<div />").addClass("switchEquip group-option").attr("id","switch-teams"));const LOCATION_SWITCH=$("<div />").addClass("option locationChanged");"locationID"===SCHEDULER.option("groups")?LOCATION_SWITCH.show():LOCATION_SWITCH.hide(),$("#list3").append(LOCATION_SWITCH),LOCATION_SWITCH.append($("<span />").addClass("option-label").text("afficher les localisations")),LOCATION_SWITCH.append($("<div />").addClass("switchLocation group-option").attr("id","switch-location"));const OPTION_TEACHERS=$("<div />").addClass("option groupe-option");OPTION_TEACHERS.append($("<span />").addClass("option-label").text("Enseignants")),$("#list3").append(OPTION_TEACHERS);let OPTION_UNWORKING_DAY=$("<div />").addClass("option groupe-option");OPTION_UNWORKING_DAY.append($("<span />").addClass("option-label").text("Jour non travaillé")),$("#list3").append(OPTION_UNWORKING_DAY);const OPTION_ACTION=$("<div />").addClass("option groupe-option action");OPTION_ACTION.append($("<span />").addClass("option-label").text("Actions")),$("#list3").append(OPTION_ACTION);const BUTTON_OPTION=[{group:OPTION_TEACHERS,text:"Voir les enseignants",icon:"ja-show-team",className:"buttonShowTeacher",event:{intern:{name:createPopupOption,param:{contentOption:POPUP_SHOW_TEACHERS_OPTION}}}},{group:OPTION_TEACHERS,text:"Gerer les abscences",icon:"ja-abs",className:"buttonAbsence",event:{intern:{name:createPopupOption,param:{contentOption:POPUP_SALARIE_ABSENCE_OPTION}}}},{group:OPTION_UNWORKING_DAY,text:"Jour non travaillé",icon:"ja-calendar",className:"buttonUnworkedDay",event:{intern:{name:createPopupOption,param:{contentOption:POPUP_GRID_UNWORKINGDAY_OPTION}}}},{group:OPTION_ACTION,text:"Reconnexion",icon:"ja-admin",event:{fmScript:{name:"Reconnexion"}}}];$.each(BUTTON_OPTION,(function(key,value){createButtonOption(value)}))}}).dxAccordion("instance"),SCROLL_VIEW_LISTE=$(".listContent").dxScrollView({useNative:!1,showScrollbar:"onScroll"}).dxScrollView("instance"),ALERT_TEACHER={message:"vous devez sélectionner au moin une équipe",type:"error"},ALERT_LOCATION={message:"vous devez sélectionner au moin une localisation",type:"error"},ALERT_APPOINTMENT_DISABLE={message:"vous ne pouvez pas créer d'évenement pour cette date.",type:"error"};function afterDataInStore(){SCHEDULER.repaint(),SCHEDULER.on([{initialized:afterRepaint()}]),SCHEDULER.option("resources[1].dataSource",getDataLocations(PARAM_STORE._array[0].location))}function afterTeachersInStore(){createOptionTeacher(),createOptionLocation(),SCHEDULER.option("resources[0].dataSource",getDataTeacher(PARAM_STORE._array[0].teacher,SCHEDULER.option("currentDate")))}function initParam(){1==PARAM_STORE._array[0].drawer&&DRAWER.option("opened",!0),0!=PARAM_STORE._array[0].currentDate.length&&(SCHEDULER.option("currentDate",new Date(PARAM_STORE._array[0].currentDate)),PARAM_STORE.update(PARAM_STORE._array[0].id,{currentDate:""}))}function setEditors(e){let el=e.form.element().find(".dx-recurrence-numberbox-interval-wrapper").css({display:"none"}),endRepeatEditor=e.form.element().find(".dx-recurrence-radiogroup-repeat-type").dxRadioGroup("instance");"never"===endRepeatEditor.option("value")&&endRepeatEditor.option("value","count"),endRepeatEditor.option("items",endRepeatEditor.option("items").filter(i=>"never"!==i.type))}function widthAppointment(){const WIDTH_CELL=$(".dx-scheduler-date-table-cell").width();$(".dx-scheduler-appointment-vertical").width(WIDTH_CELL+1.6)}function cellHeight(){const HEIGHT_CELL=(W_HEIGHT-116)/21-1;return HEIGHT_CELL}function afterRepaint(){$(".dx-scheduler-view-switcher").remove(),$(".dx-scheduler-view-switcher-label").remove(),createSemContainer(),initWeekNumber(),initParam(),LOADPANEL.hide()}function getDataTeacher(value,d){let j=new Date(d).getTime(),teacherShowInScheduler=[];return TEACHER_STORE._array.length>0?$.each(value,(i,val)=>{const MY_TEACHER=$.grep(TEACHER_STORE._array,e=>e.id===val);new Date(MY_TEACHER[0].startDate).getTime()<=j&&new Date(MY_TEACHER[0].endDate).getTime()>=j&&teacherShowInScheduler.push(MY_TEACHER[0])}):teacherShowInScheduler=[{id:"1"}],teacherShowInScheduler}function getDataLocations(value){let locationShowInScheduler=[];return LOCATION.length>0?$.each(value,(i,val)=>{const MY_LOCATION=$.grep(LOCATION,e=>e.id===val);locationShowInScheduler.push(MY_LOCATION[0])}):locationShowInScheduler=[{id:"0"}],locationShowInScheduler}function disableDate(args){let isChome;const Chome=$.grep(CHOME_STORE._array,e=>{const START_DATE=new Date(e.startDate),END_DATE=new Date(e.endDate);return args.date.getTime()>=START_DATE.getTime()&&args.date.getTime()<=END_DATE.getTime()-6e4});isChome=Chome.length>0;const DAY_WEEK=args.date.getDay(),WEEKEND=0===DAY_WEEK||6===DAY_WEEK,RESULT=new Object;return RESULT.chome=isChome,RESULT.weekend=WEEKEND,RESULT}function dateFinActualise(date,e){let startDate=new Date(date),oldEndDate=new Date(e.appointmentData.endDate),oldStartDate=new Date(e.appointmentData.startDate),duration=oldEndDate.getTime()-oldStartDate.getTime(),endDate=new Date(startDate.valueOf()+duration);return endDate.getHours()>17&&endDate.setHours(17,0),endDate}function getDate(){return getDateFormatAAAAMD(SCHEDULER.option("currentDate"))}function initWeekNumber(){$("#button-sem .dx-button-text").text(getWeekNumber(SCHEDULER.option("currentDate")))}function createSemContainer(){const WRAPPER_WEEK=$("<div />").appendTo(".dx-scheduler-header .dx-toolbar-items-container .dx-toolbar-after").addClass("wrapper-sem"),BUTTON_LABEL=$("<div />").appendTo(WRAPPER_WEEK).addClass("sem-label").text("semaine"),WRAPPER_BUTTON=$("<div />").appendTo(WRAPPER_WEEK).attr({id:"button-sem",class:"sem"}),BUTTON_SEM=$("#button-sem").dxButton({stylingMode:"outlined",text:"0",type:"normal",width:36,onClick:()=>{createPopupOption({contentOption:POPUP_WEEK})}})}function dateStartEndCurrentSem(day){let dayS=new Date(day),dayE=new Date(dayS);dayS.setDate(day.getDate()-(day.getDay()-1)),dayE.setDate(dayS.getDate()+6),dayS=getDateFormatAAAAMMDD(dayS),dayE=getDateFormatAAAAMMDD(dayE);class appointementDate{constructor(s,e){this.dateStart=s,this.dateEnd=e}}return result=new appointementDate(dayS,dayE),result}function getWeekNumber(day){let d=day,j;j=0==d.getDay()?d.getDate()+1:d.getDate(),d=new Date(Date.UTC(d.getFullYear(),d.getMonth(),j)),d.setUTCDate(d.getUTCDate()+4-(d.getUTCDay()||7));const YEAR_START=new Date(Date.UTC(d.getUTCFullYear(),0,1)),WEEK_NUM=Math.ceil(((d-YEAR_START)/864e5+1)/7);return WEEK_NUM}function goWeek(sem,an){let firstDayAn=new Date;firstDayAn.setUTCFullYear(an,0,1);let firstDayOfYear,firstDayLength=8-firstDayAn.getDay();semLenght=firstDayLength>=4?sem-2:sem-1;let addDays=7*semLenght+firstDayLength+1,finalDate=new Date;finalDate.setFullYear(an,0,addDays);let firstDayOfSem=new Date(finalDate);SCHEDULER.option("currentDate",firstDayOfSem)}function updateContextMenu(disable,data,item,onItemClick,e){CONTEXT_MENU.option({dataSource:data,target:e,itemTemplate:item,onItemClick:onItemClick,disabled:disable})}function onItemClick(contextMenuEvent){return e=>{e.itemData.onItemClick(contextMenuEvent,e)}}function getAppointmentMenuTemplate(itemData){const WRAPPER_TEMPLATE=$("<div />");return itemData.hasOwnProperty("checked")?WRAPPER_TEMPLATE.dxCheckBox({value:itemData.checked,text:itemData.text}):WRAPPER_TEMPLATE.append(itemData.text).addClass("appointment-context-menu"),WRAPPER_TEMPLATE}function getCellMenuTemplate(itemData){const WRAPPER_TEMPLATE=$("<div />");return WRAPPER_TEMPLATE.append(itemData.text).addClass("cell-context-menu"),WRAPPER_TEMPLATE}function groupCell(){let now=SCHEDULER.option("groupByDate");now=!now,optionText=!0===now?"Grouper par équipe":"Grouper par date",CONTEXT_MENU_ITEMS[1].text=optionText,SCHEDULER.option("groupByDate",now)}function createAppointment(e){SCHEDULER.showAppointmentPopup({startDate:new Date(e.cellData.startDate),endDate:new Date(e.cellData.startDate.getTime()+18e5),teacherID:e.cellData.groups.teacherID},!0)}function showCurrentDate(e){SCHEDULER.option("currentDate",new Date)}function showAppointment(e){SCHEDULER.showAppointmentPopup(e.appointmentData)}function deleteAppointment(e){let recurrence=e.appointmentData.recurrenceRule,myDate=new Date(e.targetedAppointmentData.startDate);myDate=new Date(myDate.getFullYear(),myDate.getMonth(),myDate.getDate(),myDate.getHours(),myDate.getMinutes()),recurrence?SCHEDULER.deleteRecurrence(e.appointmentData,myDate,"dialog"):SCHEDULER.deleteAppointment(e.appointmentData)}function duplicateAppointment(e){const APPOINTMENT=e.targetedAppointmentData;delete APPOINTMENT.id,SCHEDULER.addAppointment(APPOINTMENT)}function changeLocation(e,clickEvent){const APPOINTMENT=e.appointmentData;SCHEDULER.updateAppointment(APPOINTMENT,$.extend(APPOINTMENT,{locationID:clickEvent.itemData.id}))}function createOptionGroupByTeacherOrLocation(){const WRAPPER=$("<div />"),WRAPPER_RADIO=$("<div />").addClass("radioGroupe option-groupe");return WRAPPER.append(WRAPPER_RADIO),$(".option-regroupement").append(WRAPPER),WRAPPER_RADIO.dxRadioGroup({items:[{id:0,text:"grouper par enseignant"},{id:1,text:"grouper par localisation"}],value:0,displayExpr:"text",valueExpr:"id",onValueChanged:args=>{0==args.value?(SCHEDULER.option("groups","teacherID"),$(".equipChanged").show(),$(".locationChanged").hide()):(SCHEDULER.option("groups","locationID"),$(".equipChanged").hide(),$(".locationChanged").show()),SCHEDULER.repaint()}}).dxRadioGroup("instance"),WRAPPER_RADIO}function createOptionGroupByDate(){const WRAPPER=$("<div />"),WRAPPER_SWITCH_TITLE=$("<span />").text("Grouper par date").addClass("switchGroupLabel"),WRAPPER_SWITCH=$("<div />").addClass("switchGroupe option-groupe");WRAPPER.append([WRAPPER_SWITCH_TITLE,WRAPPER_SWITCH]),$(".option-regroupement").append(WRAPPER),WRAPPER_SWITCH.dxSwitch({name:"groupByDate",width:30,value:!0,onValueChanged:args=>{SCHEDULER.option("groupByDate",args.value),SCHEDULER.on([{repaint:afterRepaint()}])}})}function createOptionTeacher(){$(".switchEquip").empty();let array=PARAM_STORE._array[0].teacher;$.each(TEACHER_STORE._array,(el,value)=>{let startDate=value.startDate,endDate=value.endDate,j=SCHEDULER.option("currentDate");if(new Date(startDate).getTime()<=j&&new Date(endDate).getTime()>=j){let val=array.includes(value.id);$("<div />").attr("id",`checkbox-team${value.id}`).addClass("checkbox-team").appendTo(".switchEquip");const CHECKBOX=$(`#checkbox-team${value.id}`).dxCheckBox({text:value.text,value:val,onValueChanged:e=>{!0===e.value?(array.push(value.id),SCHEDULER.option("resources[0].dataSource",getDataTeacher(array,SCHEDULER.option("currentDate"))),PARAM_STORE.update(PARAM_STORE._array[0].id,{teacher:array})):(array=array.filter(e=>e!==value.id),0==array.length?(createToast(ALERT_TEACHER),CHECKBOX.option("value",!0)):(SCHEDULER.option("resources[0].dataSource",getDataTeacher(array,SCHEDULER.option("currentDate"))),PARAM_STORE.update(PARAM_STORE._array[0].id,{teacher:array})))}}).dxCheckBox("instance")}})}function createOptionLocation(){let array=PARAM_STORE._array[0].location;$.each(LOCATION,(el,value)=>{let val=array.includes(value.id);$("<div />").attr("id",`checkbox-location${value.id}`).addClass("checkbox-location").appendTo(".switchLocation");const CHECKBOX=$(`#checkbox-location${value.id}`).dxCheckBox({text:value.text,value:val,onValueChanged:e=>{!0===e.value?(array.push(value.id),SCHEDULER.option("resources[1].dataSource",getDataLocations(array)),PARAM_STORE.update(PARAM_STORE._array[0].id,{location:array})):(array=array.filter(e=>e!==value.id),0==array.length?(createToast(ALERT_LOCATION),CHECKBOX.option("value",!0)):(SCHEDULER.option("resources[1].dataSource",getDataLocations(array)),PARAM_STORE.update(PARAM_STORE._array[0].id,{location:array})))}}).dxCheckBox("instance")})}function createButtonOption(e){const WRAPPER_BTN=$("<div />").addClass("bt-option"),BTN=$("<div />").addClass("button-option");WRAPPER_BTN.append(BTN),e.group.append(WRAPPER_BTN),BTN.dxButton({text:e.text,icon:e.icon,elementAttr:{class:e.className},type:"normal",onClick:()=>{if(e.event.fmScript){if(e.event.fmScript.param){let func=e.event.fmScript.param;param=func()}else param="";return queryToFM(new queryFM(e.event.fmScript.name,param)),!0}{let func,param;(0,e.event.intern.name)(e.event.intern.param)}}})}function createPopupOption(param){class CREATE_POPUP{constructor(popupContentOption){this.contentOption=popupContentOption,this.startPopup=()=>{if(popupOption)popupOption=$("#popupOption").dxPopup(popupContentOption).dxPopup("instance");else{let wrapper=$("<div />").attr("id","popupOption").appendTo("#planning");popupOption=wrapper.dxPopup(popupContentOption).dxPopup("instance")}popupOption.show()}}}const CREATED_POPUP=new CREATE_POPUP(param.contentOption);CREATED_POPUP.startPopup()}function createToast(param){class CREATE_TOAST{constructor(param){this.startToast=()=>{if(toastOption)toastOption=$("#toast").dxToast(param).dxToast("instance");else{let wrapper=$("<div />").attr("id","toast").appendTo("#planning");toastOption=wrapper.dxToast(param).dxToast("instance")}toastOption.show()}}}const CREATED_TOAST=new CREATE_TOAST(param);CREATED_TOAST.startToast()}function colorPickerTeacher(cellElement,cellInfo){return $("<div>").dxColorBox({value:cellInfo.value,onValueChanged:e=>{cellInfo.setValue(e.value)},applyButtonText:"ok"})}function echapElem(chaine){return chaine=(chaine=chaine.replace(/'/g,"''")).replace(/\n|\r|(\n\r)/g,"/r")}function getDateFormatAAAAMMDD(date){let m=date.getMonth()+1,d=date.getDate(),a;return d<10&&(d=`0${d}`),m<10&&(m=`0${m}`),`${date.getFullYear()}/${m}/${d}`}function getDateFormatAAAAMD(date){let m=date.getMonth()+1,d=date.getDate(),a;return`${date.getFullYear()}/${m}/${d}`}function getDateFormatRrule(d){let a=(d=new Date(d)).getFullYear(),m=(d.getMonth()+1).toString().padStart(2,"0");return j=d.getDate().toString().padStart(2,"0"),h=d.getUTCHours().toString().padStart(2,"0"),mi=d.getUTCMinutes().toString().padStart(2,"0"),s=d.getUTCSeconds().toString().padStart(2,"0"),`${a}${m}${j}T${h}${mi}${s}Z`}function getDateWithNewHour(d,h){return h=h.padEnd(6,"0"),d.replace(/T\d{6}Z/g,`T${h}Z`)}function getDataAppointmentFM(day){let dayStartEnd=dateStartEndCurrentSem(day),dayS=dayStartEnd.dateStart,param=JSON.stringify(dayStartEnd);return appointmentDownloaded.includes(dayS)||(appointmentDownloaded.push(dayS),queryToFM(new queryFM("getDataAppointment",param))),!0}function appointementChangeFM(e){if(e.value.recurrenceRule){let dtstart=`DTSTART:${getDateFormatRrule(e.value.startDate)}`,rrULE=e.value.recurrenceRule,exDate="";if(e.value.recurrenceException){let heureModif=`${new Date(e.value.startDate).getUTCHours().toString().padStart(2,"0")}${new Date(e.value.startDate).getUTCMinutes().toString().padStart(2,"0")}`,recurrenceExceptionModif;exDate=`EXDATE:${e.value.recurrenceException.split(",").map(date=>getDateWithNewHour(date,heureModif)).join(",")}`}let Rule,myRules=new rrule.rrulestr(`${dtstart}\n${rrULE}\n${exDate}`).all(),timeOffsetOfFirstRule=myRules[0].getTimezoneOffset(),newDate=[],difMin=(new Date(e.value.endDate)-new Date(e.value.startDate))/6e4,h=Math.floor(difMin/60),m=difMin%60;myRules.forEach((e,i)=>{let startDate=new Date(e);timeZoneOffset=e.getTimezoneOffset(),timeZoneOffset!=timeOffsetOfFirstRule&&(timeZoneOffset>timeOffsetOfFirstRule?startDate.setHours(e.getHours()+1):startDate.setHours(e.getHours()-1)),startDate=startDate.toJSON();let endDate=new Date(startDate);endDate.setHours(endDate.getHours()+h),endDate.setMinutes(endDate.getMinutes()+m),endDate=endDate.toJSON();let dateObject={};dateObject.startDate=startDate,dateObject.endDate=endDate,newDate.push(dateObject)}),e.ruleAll=newDate}let param=JSON.stringify(e);return queryToFM(new queryFM("maj_Appointment",param)),!0}function SQL_UpdateFM(table,key,value){delete value.id;let sql_val="";$.each(value,(e,val)=>{let newVal;"description"==e&&(val=echapElem(val)),newVal="string"==typeof val||"object"==typeof val?`'${val}'`:val,sql_val=`${sql_val}${val=`${e}!!${newVal}`},`}),sql_val=sql_val.substring(0,sql_val.length-1);const SQL=`!E!UPDATE ${table} SET ${sql_val} WHERE id!!'${key}'`;queryToFM(new queryFM("maj_Planning",SQL))}function SQL_InsertFM(table,value){let sql_val="",sql_prop=Object.keys(value).join(",");$.each(value,(e,val)=>{let newVal;"description"==e&&(val=echapElem(val)),newVal="string"==typeof val||"object"==typeof val?`'${val}'`:val,sql_val=`${sql_val}${newVal},`}),sql_val=sql_val.substring(0,sql_val.length-1);const SQL=`!E!INSERT INTO ${table} (${sql_prop}) VALUES (${sql_val})`;queryToFM(new queryFM("maj_Planning",SQL))}function SQL_removeFM(table,key){const SQL=`!E!DELETE FROM ${table} WHERE id!!'${key}'`;queryToFM(new queryFM("maj_Planning",SQL))}function queryToFM(query){return FileMaker.PerformScript(query.script,query.param),!0}setData=val=>{const VAL=JSON.parse(val),EXPR=VAL.store,DATA_STORE=[{store:TEACHER_STORE,event:{name:"teacher",callback:afterTeachersInStore}},{store:CHOME_STORE,event:{name:"chome",callback:afterDataInStore}},{store:ABSENCE_STORE,event:{name:"absence"}},{store:PARAM_STORE,event:{name:"param"}},{store:APPOINTMENT_STORE,event:{name:"appointment",callback:afterDataInStore}}];let arr=$.grep(DATA_STORE,(function(n,i){let result;return n.event.name==EXPR})),store=arr[0].store;const DATA=VAL.data;let func;DATA.forEach((e,i)=>{store.push([{type:"insert",data:e,index:i}])}),(0,arr[0].event.callback)()}});
